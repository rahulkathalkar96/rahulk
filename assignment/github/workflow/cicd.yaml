name: "CI/CD"

on:
  push:
    branches:
      - main
    paths: 
       - 'helm/**'
  pull_request:
    paths: 
       - 'helm/**'

jobs:
  helm-ci:
    name: "helm CI"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ././helm
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Get GitHub App Token
        id: get-app-token
        uses: getsentry/action-github-app-token@v1.0.6
        with:
          app_id: ${{ secrets.GIT_REPO_READ_ONLY_APP_ID }}
          private_key: ${{ secrets.GIT_REPO_READ_ONLY_APP_PRIVATE_KEY }}

      - name: Git config
        id: config
        run: |
          sudo git config --local --remove-section http."https://github.com/"
          sudo git config --system url."https://x-access-token:${GITHUB_TOKEN}@github.com/"
          terraform init
        env:
          GITHUB_TOKEN: ${{ steps.get-app-token.outputs.token }}
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terrascan Init
        run: | 
          terrascan init     
              
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  helm-CD:
    name: "helm CD"
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ././dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup-Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Get GitHub App Token
        id: get-app-token
        uses: getsentry/action-github-app-token@v1.0.6
        with:
          app_id: ${{ secrets.GIT_REPO_READ_ONLY_APP_ID }}
          private_key: ${{ secrets.GIT_REPO_READ_ONLY_APP_PRIVATE_KEY }}

      - name: Git config
        id: config
        run: |
          sudo git config --local --remove-section http."https://github.com/"
          sudo git config --system url."https://x-access-token:${GITHUB_TOKEN}@github.com/ZscalerCWP".insteadOf "https://github.com/ZscalerCWP"
          terraform init
        env:
          GITHUB_TOKEN: ${{ steps.get-app-token.outputs.token }}
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
    
      - name: Terraform Apply
        run: terraform apply -auto-approve
      
        